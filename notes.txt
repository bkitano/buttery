/*
- script tags go in the body tags
- make sure to be on the correct versions of CLIs and things
-- npm v 6 (update using nvm)
-- mongodb v 3.2 (update instructions on google)
- make sure you are following instructions
-- putting handlebars material where it is supposed to go, not where it's easy
- things in html shouldn't have the same id, but it's okay to have the same class
- important to note the distinctions between form groups and form lists
*/

Things to include in the order
- time/date
- payment method
    - venmo
    - cash
- status
    - picked up
    - ready for pick up
    - cooking
    - received
- name
- cost
- email
- phone number

Mongo CLI
mongo ds123182.mlab.com:23182/buttery -u brian -p buttery

Mongo URI
mongodb://<dbuser>:<dbpassword>@ds123182.mlab.com:23182/buttery

6/17/17 - initial connects to the mlabs database are up and running, now time
to render the client face so that you don't lose all of the open
orders

1. upon going to the 

ha shit it now retains its orders
nice

6/18/17 - todo's
1. need to order the numbers correctly
2. need to be able to complete orders
- the animation for that is done, and it's mobily responsive!
okay, so dynamically loaded content doesn't work 
exactly like you think it will
https://stackoverflow.com/questions/17620211/jquery-events-not-working-on-ajax-loaded-content

Thus, this:

<script id="complete-button">
            $(".complete").click( function() {
                $(this).toggleClass('btn-danger');
                if( $(this).text() === 'Complete' ) {
                    $(this).text('Incomplete');
                } else {
                    $(this).text('Complete');
                }
            // use a web socket to alter the database data
        });
        </script>
        
will do the same thing as this:

<script id='alternate-complete-button'>
            $('#order-list').on('click', '.complete', function() {
                $(this).toggleClass('btn-danger');
                if( $(this).text() === 'Complete') {
                    $(this).text('Incomplete');
                } else {
                    $(this).text('Complete');
                }
            });
        </script>

but the first script ('complete-button') won't work
on the orders that you send in the current request; that is,
it only works on the orders that you pull from the database.
This is because in the first script, we bound that execution to 
$(document).ready(), which meant it would only work on orders
that were added when the script was rendered in the initial request,
not the ones that were added. Instead, we used a 'delegate', which
allows us to work events on things that haven't been created yet.

6/28/17
updates the database when you click complete, and made the UI more make sensical

// this code is fun but useless.
                // var id = $(this).parent().parent().attr('id');
                // var complete = false;
            
                // $(this).toggleClass('btn-danger');
                // if( $(this).text() === 'Complete') {
                //     $(this).text('Incomplete');
                // } else {
                //     $(this).text('Complete');
                //     complete = true;
                // }
                
need to do wide updating for pick up

okay the updating structure:
1. (works) customer submits order (client dependent animation)
1a. client to server, client animation
1b. server broadcasts

2. worker marks as complete (server dependent animation)
2a. client to server
2b. server broadcasts to all clients
2c. client jquery animation

3. worker marks as picked up (server dependent animation)
3a. client to server
3b. server broadcasts to all clients
3c. client animation

7/2/17
^k all that shit is working, let's check out
the facebook login integration.

https://www.youtube.com/watch?v=x_gLILTRD_k&t=3s
https://developers.facebook.com/docs/facebook-login/web

7/3/17
First thing's first tho, we need to specify the buttery first.

Alright how do i want to do this
I could do it like

- each buttery gets its own separate site, 
which makes sense because you know different menus and order panes

Steps:
1. make one for each buttery, having it send to each site
-- merp

alright we'll start with morse and stiles. i think all i have to do
is change the socket locations.

Alright we are switching over to mongojs. Just kidding not helpful yet.
